<?xml version="1.0"?>
<robot name="mecanum_vehicle"
  xmlns:xacro="http://www.ros.org/wiki/xacro"
  xmlns:gz="http://gazebosim.org/schema">

  <!-- ARGS -->
  <xacro:arg name="USE_WITH_SIM" default="false" />
  <xacro:arg name="NAMESPACE" default="" />
  <xacro:arg name="YAML_PATH" default="" />

  <!-- MATERIALS -->
  <material name="orange">
    <color rgba="0.8 0.4 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1.0"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>

  <!-- Base Link -->
  <link name="base_link">
    <collision>
      <origin xyz="0 0 0.1" rpy="0 0 0"/>
      <geometry>
        <box size="0.52 0.42 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0.1" rpy="0 0 0"/>
      <geometry>
        <box size="0.52 0.42 0.1"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <inertial>
      <origin xyz="0 -0 0.1" rpy="0 0 0"/>
      <mass value="50"/>
      <inertia ixx="0.13" ixy="0.0" ixz="0.0" iyy="0.42" iyz="0.0" izz="0.48"/>
    </inertial>
  </link>

  <joint name="base_footprint_joint" type='fixed'>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>

  <link name="base_footprint">
  </link>

  <!-- front left wheel -->
  <joint name="front_left_wheel_joint" type="continuous">
    <origin xyz="0.23 0.26 0.076" rpy="-${pi/2} 0 0"/>
    <parent link="base_link"/>
    <child link="front_left_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.2"/>
  </joint>
  <link name="front_left_wheel">
    <collision>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="20"/>
      <inertia ixx="0.145" ixy="0.0" ixz="0.0" iyy="0.145" iyz="0.0" izz="0.125"/>
    </inertial>
  </link>

  <!-- front right wheel -->
  <joint name="front_right_wheel_joint" type="continuous">
    <origin xyz="0.23 -0.26 0.076" rpy="-${pi/2} 0 0"/>
    <parent link="base_link"/>
    <child link="front_right_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.2"/>
  </joint>
  <link name="front_right_wheel">
    <collision>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="20"/>
      <inertia ixx="0.145" ixy="0.0" ixz="0.0" iyy="0.145" iyz="0.0" izz="0.125"/>
    </inertial>
  </link>

  <!-- rear left wheel -->
  <joint name="rear_left_wheel_joint" type="continuous">
    <origin xyz="-0.23 0.26 0.076" rpy="-${pi/2} 0 0"/>
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.2"/>
  </joint>
  <link name="rear_left_wheel">
    <collision>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="20"/>
      <inertia ixx="0.145" ixy="0.0" ixz="0.0" iyy="0.145" iyz="0.0" izz="0.125"/>
    </inertial>
  </link>

  <!-- rear right wheel -->
  <joint name="rear_right_wheel_joint" type="continuous">
    <origin xyz="-0.23 -0.26 0.076" rpy="-${pi/2} 0 0"/>
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="0.2"/>
  </joint>
  <link name="rear_right_wheel">
    <collision>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.076"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="20"/>
      <inertia ixx="0.145" ixy="0.0" ixz="0.0" iyy="0.145" iyz="0.0" izz="0.125"/>
    </inertial>
  </link>

  <!-- Lidar Link -->
  <joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="velodyne_base_link"/>
    <origin xyz="0.25 0 0.176" rpy="0 0 0"/>
  </joint>

  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0" iyy="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0" izz="${0.5 * 0.83 * (0.0516*0.0516)}"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file://$(find robot_bringup)/meshes/VLP16/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="file://$(find robot_bringup)/meshes/VLP16/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder radius="0.0516" length="0.0717"/>
      </geometry>
    </collision>
  </link>

  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin xyz="0 0 0.0377" rpy="0 0 0"/>
    <parent link="velodyne_base_link"/>
    <child link="laser_frame"/>
  </joint>

  <link name="laser_frame">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="file://$(find robot_bringup)/meshes/VLP16/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>

  <!-- To emulate Mecanum wheels in Gazebo with spherical collisions it
  requires a custom friction model so the vehicle can strafe left to right -->
  <xacro:if value="$(arg USE_WITH_SIM)">
    <gazebo reference='front_left_wheel'>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 gz:expressed_in="base_link">1 -1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference='front_right_wheel'>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 gz:expressed_in="base_link">1 1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference='rear_left_wheel'>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 gz:expressed_in="base_link">1 1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
    <gazebo reference='rear_right_wheel'>
      <collision>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 gz:expressed_in="base_link">1 -1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg USE_WITH_SIM)">
    <gazebo reference="laser_frame">
      <sensor name="laser" type="gpu_lidar">
        <pose> 0 0 0 0 0 0 </pose>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <topic>scan</topic>
        <gz_frame_id>laser_frame</gz_frame_id>
        <lidar>
          <scan>
            <horizontal>
              <samples>360</samples>
              <min_angle>-${pi}</min_angle>
              <max_angle>${pi}</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.3</min>
            <max>12</max>
          </range>
        </lidar>
        <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
          <render_engine>ogre2</render_engine>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:if>

  <!-- Define the vehicles hardware, command and state interfaces -->
  <ros2_control name="MecanumDrive" type="actuator">
    <hardware>
      <xacro:if value="$(arg USE_WITH_SIM)">
        <plugin>gz_ros2_control/GazeboSimSystem</plugin>
      </xacro:if>
      <xacro:unless value="$(arg USE_WITH_SIM)">
        <plugin>ak_hardware_interface/AKHardwareInterface</plugin>
        <param name="interface">can0</param>
      </xacro:unless>
    </hardware>
    <joint name="front_left_wheel_joint">
      <param name="node_id">2</param>
      <param name="model">AK60_6</param>
      <param name="control_mode">velocity</param>
      <param name="kd">1.0</param>
      <param name="reduction">-1.0</param>
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="front_right_wheel_joint">
      <param name="node_id">1</param>
      <param name="model">AK60_6</param>
      <param name="control_mode">velocity</param>
      <param name="kd">1.0</param>
      <param name="reduction">1.0</param>
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_left_wheel_joint">
      <param name="node_id">3</param>
      <param name="model">AK60_6</param>
      <param name="control_mode">velocity</param>
      <param name="kd">1.0</param>
      <param name="reduction">-1.0</param>
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_right_wheel_joint">
      <param name="node_id">4</param>
      <param name="model">AK60_6</param>
      <param name="control_mode">velocity</param>
      <param name="kd">1.0</param>
      <param name="reduction">1.0</param>
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

  <!-- ROS2 Control plugin and topic re-mapping -->
  <xacro:if value="$(arg USE_WITH_SIM)">
    <gazebo>
      <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>$(find robot_bringup)/config/mecanum_drive_controller.yaml</parameters>
        <ros>
          <namespace>/$(arg NAMESPACE)</namespace>
          <remapping>/mecanum_drive_controller/odometry:=/odom</remapping>
          <remapping>/mecanum_drive_controller/tf_odometry:=/tf</remapping>
          <remapping>/mecanum_drive_controller/reference_unstamped:=/cmd_vel</remapping>
        </ros>
      </plugin>
    </gazebo>
  </xacro:if>

</robot>
